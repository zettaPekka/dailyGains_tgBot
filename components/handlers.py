from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandStart
from aiogram import Router, F
from aiogram.fsm.context import FSMContext

import logging

from database.crud import chek_user, chek_today_achievement, add_achievement_to_db, get_today_achievement, get_statistics
import components.keyboards as kb
from components.states import Achievement


logging.basicConfig(level=logging.INFO)

router = Router()


@router.message(CommandStart())
async def start(message: Message):
    await message.answer('<b>üí´ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DailyGains!\n\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –æ—Ç–º–µ—á–∞—Ç—å —Å–≤–æ–∏ –º–∞–ª–µ–Ω—å–∫–∏–µ –∏ –±–æ–ª—å—à–∏–µ –ø–æ–±–µ–¥—ã, —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –∂–µ —É—Å–ø–µ—Ö–∞–º–∏.</b>\n\n<i>¬´–ù–µ–≤–∞–∂–Ω–æ, –º–µ–¥–ª–µ–Ω–Ω–æ —Ç—ã –∏–¥–µ—à—å –∏–ª–∏ –±—ã—Å—Ç—Ä–æ, –≥–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è¬ª </i>',
                            reply_markup=kb.start_kb)
    await chek_user(user_id=message.from_user.id)

@router.callback_query(F.data == 'back')
async def back(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.edit_text('<b>üí´ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DailyGains!\n\n–¢—ã –º–æ–∂–µ—à—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –æ—Ç–º–µ—á–∞—Ç—å —Å–≤–æ–∏ –º–∞–ª–µ–Ω—å–∫–∏–µ –∏ –±–æ–ª—å—à–∏–µ –ø–æ–±–µ–¥—ã, —Å–ª–µ–¥–∏—Ç—å –∑–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –∂–µ —É—Å–ø–µ—Ö–∞–º–∏.</b>\n\n<i>¬´–ù–µ–≤–∞–∂–Ω–æ, –º–µ–¥–ª–µ–Ω–Ω–æ —Ç—ã –∏–¥–µ—à—å –∏–ª–∏ –±—ã—Å—Ç—Ä–æ, –≥–ª–∞–≤–Ω–æ–µ ‚Äî –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è¬ª </i>',
                                    reply_markup=kb.start_kb)
    await state.clear()

@router.callback_query(F.data == 'add_achievement')
async def write_achievement(callback: CallbackQuery, state: FSMContext):
    res = await chek_today_achievement(user_id=callback.message.chat.id)
    if res:
        await callback.answer()
        await callback.message.edit_text('<b><i>üìù –ó–ê–ü–ò–®–ò –°–í–û–ô –ü–†–û–ì–†–ï–°–°</i>\n\n–î–∞–∂–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –ø–æ–±–µ–¥—ã –∑–∞—Å–ª—É–∂–∏–≤–∞—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è!\n–ù–∞–ø–∏—à–∏, —á–µ–º—É —Ç—ã –Ω–∞—É—á–∏–ª—Å—è, —á—Ç–æ —É–ª—É—á—à–∏–ª –∏–ª–∏ –∫–∞–∫ –ø—Ä–æ—è–≤–∏–ª —Å–µ–±—è. (–ù–æ –æ–≥—Ä–∞–Ω–∏—á—å—Å—è 200 —Å–∏–º–≤–æ–ª–∞–º–∏)</b>',
                                        reply_markup=kb.back_kb)
        await state.set_state(Achievement.add_achievement)
    else:
        await callback.message.edit_text('<b>–¢—ã —É–∂–µ –¥–æ–±–∞–≤–∏–ª —Å–µ–≥–æ–¥–Ω—è —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å, –º–æ–∂–µ—à—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–∞—Ç—å –µ–≥–æ</b>',
                                        reply_markup=kb.edit_kb)
        await callback.answer('–¢—ã —É–∂–µ —Å—Ç–∞–ª –ª—É—á—à–µ!')

@router.message(Command('add'))
async def write_achievement(message: Message, state: FSMContext):
    res = await chek_today_achievement(user_id=message.chat.id)
    if res:
        await message.answer('<b><i>üìù –ó–ê–ü–ò–®–ò –°–í–û–ô –ü–†–û–ì–†–ï–°–°</i>\n\n–î–∞–∂–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –ø–æ–±–µ–¥—ã –∑–∞—Å–ª—É–∂–∏–≤–∞—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è!\n–ù–∞–ø–∏—à–∏, —á–µ–º—É —Ç—ã –Ω–∞—É—á–∏–ª—Å—è, —á—Ç–æ —É–ª—É—á—à–∏–ª –∏–ª–∏ –∫–∞–∫ –ø—Ä–æ—è–≤–∏–ª —Å–µ–±—è. (–ù–æ –æ–≥—Ä–∞–Ω–∏—á—å—Å—è 200 —Å–∏–º–≤–æ–ª–∞–º–∏)</b>',
                                        reply_markup=kb.back_kb)
        await state.set_state(Achievement.add_achievement)
    else:
        await message.answer('<b>–¢—ã —É–∂–µ –¥–æ–±–∞–≤–∏–ª —Å–µ–≥–æ–¥–Ω—è —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å, –º–æ–∂–µ—à—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–∞—Ç—å –µ–≥–æ</b>',
                                        reply_markup=kb.edit_kb)

@router.message(Achievement.add_achievement)
async def add_achievement(message: Message, state: FSMContext):
    if len(message.text) > 200:
        await message.answer('<b>–≠—Ç–æ –æ—á–µ–Ω—å –∫—Ä—É—Ç–æ, –Ω–æ –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –±–æ–ª–µ–µ 200 —Å–∏–º–≤–æ–ª–æ–≤, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑</b>')
    else:
        await add_achievement_to_db(user_id=message.from_user.id, achievement=message.text)
        await message.answer('<b>–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!</b>',
                                reply_markup=kb.statistics_kb)
        await state.clear()

@router.callback_query(F.data == 'edit_achievement')
async def edit_achievement(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    today_achievement = await get_today_achievement(user_id=callback.message.chat.id)
    if today_achievement:
        today_achievement = today_achievement.replace('<', '&lt;').replace('>', '&gt;')
        await callback.message.answer(f'<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —Å–µ–≥–¥–Ω—è—à–Ω–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤)</b>\n\n<code>{today_achievement}</code>',
                                        reply_markup=kb.back_kb)
        await state.set_state(Achievement.edit_achievement)
    else:
        await callback.message.answer('<b>–°–µ–≥–æ–¥–Ω—è –≤—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –±–æ—Ç–∞, –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ</b>',
                                reply_markup=kb.add_achievement)

@router.message(Command('edit'))
async def edit_achievement(message: Message, state: FSMContext):
    today_achievement = await get_today_achievement(user_id=message.chat.id)
    if today_achievement:
        today_achievement = today_achievement.replace('<', '&lt;').replace('>', '&gt;')
        await message.answer(f'<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —Å–µ–≥–¥–Ω—è—à–Ω–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤)</b>\n\n<code>{today_achievement}</code>',
                                reply_markup=kb.back_kb)
        await state.set_state(Achievement.edit_achievement)
    else:
        await message.answer('<b>–°–µ–≥–æ–¥–Ω—è –≤—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –±–æ—Ç–∞, –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ</b>',
                                reply_markup=kb.add_achievement)

@router.message(Achievement.edit_achievement)
async def edit_achievement(message: Message, state: FSMContext):
    if len(message.text) > 200:
        await message.answer('<b>–≠—Ç–æ –æ—á–µ–Ω—å –∫—Ä—É—Ç–æ, –Ω–æ –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –±–æ–ª–µ–µ 200 —Å–∏–º–≤–æ–ª–æ–≤</b>')
    else:
        await add_achievement_to_db(user_id=message.from_user.id, achievement=message.text)
        achievement = message.text.replace('<', '&lt;').replace('>', '&gt;')
        await message.answer(f'<b>–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!</b>\n\n<i>{achievement}</i>',
                                reply_markup=kb.statistics_kb)
        await state.clear()

@router.callback_query(F.data == 'statistics')
async def statistics(callback: CallbackQuery):
    await callback.answer('')
    data = await get_statistics(user_id=callback.message.chat.id)
    if data:
        answer_text = ['']
        page = 0
        for date, achievement in data.items():
            page_i = page // 15
            if len(answer_text) < (page_i + 1):
                answer_text.append('')
            achievement_parse = achievement.replace('<', '&lt;').replace('>', '&gt;')
            answer_text[page_i] += f'<b>‚Ä¢ {date}</b>\n<i>{achievement_parse}</i>\n\n'
            page += 1
        
        if len(answer_text[0]) < 15:
            await callback.message.answer(f'–°—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Ññ1\n\n{answer_text[0]}\n\n<b>–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ 1 —Ñ–∞–π–ª–µ —Ç–æ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @zettapekka</b>')    
        else:
            await callback.message.answer(f'–°—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Ññ1\n\n{answer_text[0]}', reply_markup=kb.change_pages(1))    
    else:
        await callback.message.answer('<b>–í—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª—è–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –±–æ—Ç–∞, —Å–µ–≥–æ–¥–Ω—è –∏–¥–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–∞—á–∞–ª–∞!</b>', 
                                        reply_markup=kb.add_achievement)

@router.message(Command('statistics'))
async def statistics(message: Message):
    data = await get_statistics(user_id=message.chat.id)
    if data:
        answer_text = ['']
        page = 0
        for date, achievement in data.items():
            page_i = page // 15
            if len(answer_text) < (page_i + 1): answer_text.append('')
            achievement_parse = achievement.replace('<', '&lt;').replace('>', '&gt;')
            answer_text[page_i] += f'<b>‚Ä¢ {date}</b>\n<i>{achievement_parse}</i>\n\n'
            page += 1
        if len(answer_text[0]) < 15:
            await message.answer(f'–°—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Ññ1\n\n{answer_text[0]}\n\n<b>–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ 1 —Ñ–∞–π–ª–µ —Ç–æ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @zettapekka</b>')    
        else:
            await message.answer(f'–°—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Ññ1\n\n{answer_text[0]}', reply_markup=kb.change_pages(1))    
    else:
        await message.answer('<b>–í—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª—è–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –±–æ—Ç–∞, —Å–µ–≥–æ–¥–Ω—è –∏–¥–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–∞—á–∞–ª–∞!</b>', 
                                        reply_markup=kb.add_achievement)

@router.callback_query(F.data.startswith('before_page_'))
async def before_page_index(callback: CallbackQuery):
    await callback.answer()
    data = await get_statistics(user_id=callback.message.chat.id)
    if data:
        answer_text = ['']
        page = 0
        for date, achievement in data.items():
            page_i = page // 15
            if len(answer_text) < (page_i + 1): answer_text.append('')
            achievement_parse = achievement.replace('<', '&lt;').replace('>', '&gt;')
            answer_text[page_i] += f'<b>‚Ä¢ {date}</b>\n<i>{achievement_parse}</i>\n\n'
            page += 1
    try:
        index_page = int(callback.data.split('_')[-1])
        if index_page != 0:
            await callback.message.answer(f'–°—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Ññ{index_page}\n\n{answer_text[index_page - 1]}', reply_markup=kb.change_pages(index_page))
        else: 
            await callback.message.answer('<b>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</b>')
    except:
        await callback.message.answer('<b>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</b>')

@router.callback_query(F.data.startswith('after_page_'))
async def after_page_index(callback: CallbackQuery):
    await callback.answer()
    data = await get_statistics(user_id=callback.message.chat.id)
    if data:
        answer_text = ['']
        page = 0
        for date, achievement in data.items():
            page_i = page // 15
            if len(answer_text) < (page_i + 1): 
                answer_text.append('')
            achievement_parse = achievement.replace('<', '&lt;').replace('>', '&gt;')
            answer_text[page_i] += f'<b>‚Ä¢ {date}</b>\n<i>{achievement_parse}</i>\n\n'
            page += 1
    try:
        index_page = int(callback.data.split('_')[-1])
        await callback.message.answer(f'–°—Ç—Ä–∞–Ω–∏—Ü–∞ ‚Ññ{index_page}\n\n{answer_text[index_page - 1]}', reply_markup=kb.change_pages(index_page))
    except:
        await callback.message.answer('<b>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</b>')

@router.message(Command('info'))
async def info(message: Message):
    await message.answer('<b>–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.\n\n–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç: \n‚Ä¢ <i>–î–æ–±–∞–≤–∏—Ç—å</i>: –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å", —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å, –≤ —á–µ–º —Ç—ã —Å—Ç–∞–ª –ª—É—á—à–µ —Å–µ–≥–æ–¥–Ω—è. \n‚Ä¢ <i>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</i>: –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –∑–∞–ø–∏—Å—å, –Ω–∞–∂–º–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å". \n‚Ä¢ <i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</i>: –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–≤–æ–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞. –õ–∏—Å—Ç–∞–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã ‚Äî –Ω–∞ –∫–∞–∂–¥–æ–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ 15 –¥–Ω–µ–π.</b>')
